name: "Terraform Validation"

on:
  push:
    paths:
      - "**.tf"
      - "**.tfvars"
      - "**.tftest.hcl"
  pull_request:
    paths:
      - "**.tf"
      - "**.tfvars"
      - "**.tftest.hcl"

permissions:
  contents: read

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest

    # Use the Bash shell
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}

    # Dump the GitHub context for debugging purposes
    # - name: Dump GitHub context
    #   env:
    #     GITHUB_CONTEXT: ${{ toJson(github) }}
    #   run: echo "${GITHUB_CONTEXT}"

    # Get the files that changed in the commit
    - id: changed-files
      name: Get changed files
      run: |
        if ${{ github.event_name == 'pull_request' || github.event.before == '0000000000000000000000000000000000000000' }}; then
          echo "changed_files=$(git diff --name-only -r HEAD^1 HEAD -- '***.tf' '***.tfvars' '***.tftest.hcl' | xargs)" >> ${GITHUB_OUTPUT}
        else
          echo "changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} -- '***.tf' '***.tfvars' '***.tftest.hcl' | xargs)" >> ${GITHUB_OUTPUT}
        fi

    # Get the directories that changed in the commit
    - id: changed-directories
      name: Get changed directories
      run: |
        directories=()
        for file in ${{ steps.changed-files.outputs.changed_files }}; do
          directory=$(dirname ${file})
          directories+=(${directory})
        done
        unique_directories=$(printf "%q\n" "${directories[@]}" | sort -u | xargs)
        echo "changed_directories=${unique_directories}" >> $GITHUB_OUTPUT

    # Install the latest version of the Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: |
        cd ${{ github.workspace }}
        echo "Checking files: ${{ steps.changed-files.outputs.changed_files }}"
        terraform fmt -check -diff ${{ steps.changed-files.outputs.changed_files }}

    # Checks that verify whether a configuration is syntactically valid and internally consistent, regardless of any provided variables or existing state.
    - if: always()
      name: Terraform Validate
      run: |
        for directory in ${{ steps.changed-directories.outputs.changed_directories }}; do
          echo "Validating $directory"
          cd ${{ github.workspace }}/${directory} && terraform init -backend=false && terraform validate
        done
